{"version":3,"file":"apiz-vue.umd.js","sources":["../src/index.ts"],"sourcesContent":["/* global DEBUG */\n// tslint:disable-next-line\nimport { APIz, APIzOptions, APIMeta, APIzInstance } from 'apiz-ng';\nimport { config } from 'tinyjx';\n// tslint:disable-next-line\nimport Client, { APIzClientInstance, APIzClientType, APIzClientMeta, APIzClientOptions, APIzRequestOptions } from 'apiz-browser-client';\nimport { VueConstructor as _Vue } from 'vue';\n\nlet installed = false;\n\n// interface Options<M extends APIMeta<APIzClientType, APIzClientMeta>> extends APIzOptions<APIzClientInstance> {\n// \tmeta: M;\n// }\n\ntype Options = APIzOptions<APIzClientInstance> & APIzClientOptions & {\n\tmeta: APIMeta<APIzClientType, APIzClientMeta>;\n};\n\ntype Instance = APIzInstance<APIzClientType, APIzClientMeta, APIzRequestOptions, APIMeta<APIzClientType, APIzClientMeta>>;\n\ninterface NamedInstance {\n\tname: string;\n\tapiGroup: Instance;\n};\n\n// type APIs = Instance | Array<NamedInstance> | NamedInstance;\n\nfunction APIs<M extends APIMeta<APIzClientType, APIzClientMeta>>(options: Options): Instance {\n\treturn APIz<APIzClientType, APIzClientMeta, APIzRequestOptions, APIzClientInstance, APIMeta<APIzClientType, APIzClientMeta>>(options.meta, {\n\t\timmutableMeta: true,\n\t\t// defaultType: 'json',\n\t\tclient: Client(options),\n\t\t...options\n\t});\n}\n\n// function isAnonymous(apis: any): apis is Instance {\n// \treturn apis instanceof APIz;\n// }\n\n// tslint:disable-next-line\nAPIs.install = function (Vue: _Vue, { pool = 5 } = {}) {\n\tif (installed) {\n\t\treturn;\n\t}\n\tinstalled = true;\n\n\tconfig({\n\t\tpool\n\t});\n\n\t// 其实我只想要hook根实例的beforeCreate而不是所有,\n\t// 然而好像没有什么很好的办法, 那就只能这样了\n\t// 至于为什么不直接通过options传入参数然后挂在\n\t// prototype上, 这样就可以不用使用mixin了, 因为\n\t// 我就希望API的调用方式是显式从根实例传入需要的参数\n\t// 而options则作为一些全局性的配置\n\tVue.mixin({\n\t\tbeforeCreate(): void | never {\n\t\t\t// 判断一下$root, 短路求值有利于减少其他组件实例化的判断\n\t\t\tif (this.$root === this && this.$options && (this.$options as any).apis) {\n\t\t\t\tconst apis = (this.$options as any).apis;\n\t\t\t\tswitch (true) {\n\t\t\t\t\t// switch true的话类型保护不起作用啊...\n\t\t\t\t\t// 看来只能手动as了\n\t\t\t\t\tcase apis instanceof APIz:\n\t\t\t\t\t\tVue.prototype.$apis = apis as Instance;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Array.isArray(apis):\n\t\t\t\t\t\t(apis as Array<NamedInstance>).forEach(item => Vue.prototype[item.name] = item.apiGroup);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase typeof apis.name === 'string' && apis.apiGroup instanceof APIz:\n\t\t\t\t\t\tVue.prototype[apis.name] = apis.apiGroup as Instance;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new TypeError('apis must be an Object or an Array');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (window && (window as any).Vue) {\n\t(window as any).Vue.use(APIs);\n}\n\nexport default APIs;"],"names":["installed","APIs","options","APIz","meta","immutableMeta","client","Client","install","Vue","pool","config","mixin","beforeCreate","$root","$options","apis","prototype","$apis","Array","isArray","forEach","item","name","apiGroup","TypeError","window","use"],"mappings":";;;;;;;;CAAA;AACA,CAOA,IAAIA,SAAS,GAAG,KAAhB;AAeC;CAID,SAASC,IAAT,CAAiEC,OAAjE;CACC,SAAOC,WAAI,CAAkHD,OAAO,CAACE,IAA1H;CACVC,IAAAA,aAAa,EAAE;CACf;CACAC,IAAAA,MAAM,EAAEC,MAAM,CAACL,OAAD;MACXA,QAJO,CAAX;CAMA;CAGD;CACA;CAEA;;;CACAD,IAAI,CAACO,OAAL,GAAe,UAAUC,GAAV;iCAAoC;wBAAbC;OAAAA,8BAAO;;CAC5C,MAAIV,SAAJ,EAAe;CACd;CACA;;CACDA,EAAAA,SAAS,GAAG,IAAZ;CAEAW,EAAAA,aAAM,CAAC;CACND,IAAAA,IAAI,EAAJA;CADM,GAAD,CAAN;CAKA;CACA;CACA;CACA;CACA;;CACAD,EAAAA,GAAG,CAACG,KAAJ,CAAU;CACTC,IAAAA,YADS;CAER;CACA,UAAI,KAAKC,KAAL,KAAe,IAAf,IAAuB,KAAKC,QAA5B,IAAyC,KAAKA,QAAL,CAAsBC,IAAnE,EAAyE;CACxE,YAAMA,IAAI,GAAI,KAAKD,QAAL,CAAsBC,IAApC;;CACA,gBAAQ,IAAR;CACC;CACA;CACA,eAAKA,IAAI,YAAYb,WAArB;CACCM,YAAAA,GAAG,CAACQ,SAAJ,CAAcC,KAAd,GAAsBF,IAAtB;CACA;;CACD,eAAKG,KAAK,CAACC,OAAN,CAAcJ,IAAd,CAAL;CACEA,YAAAA,IAA6B,CAACK,OAA9B,CAAsC,UAAAC,IAAI;CAAA,qBAAIb,GAAG,CAACQ,SAAJ,CAAcK,IAAI,CAACC,IAAnB,IAA2BD,IAAI,CAACE,QAApC;CAAA,aAA1C;CACD;;CACD,eAAK,OAAOR,IAAI,CAACO,IAAZ,KAAqB,QAArB,IAAiCP,IAAI,CAACQ,QAAL,YAAyBrB,WAA/D;CACCM,YAAAA,GAAG,CAACQ,SAAJ,CAAcD,IAAI,CAACO,IAAnB,IAA2BP,IAAI,CAACQ,QAAhC;CACA;;CACD;CACC,kBAAM,IAAIC,SAAJ,CAAc,oCAAd,CAAN;CAbF;CAeA;CACD;CArBQ,GAAV;CAuBA,CAvCD;;CAyCA,IAAIC,MAAM,IAAKA,MAAc,CAACjB,GAA9B,EAAmC;CACjCiB,EAAAA,MAAc,CAACjB,GAAf,CAAmBkB,GAAnB,CAAuB1B,IAAvB;CACD;;;;;;;;"}